global
#Paramètres globaux de haproxy, les logs (dans syslog), 
#l'utilisateur et le group de fonctionnement du service.

        log 127.0.0.1 local0
        log 127.0.0.1 local1 notice
        user haproxy
        group haproxy



defaults
# mode : mode de fonctionnement par défaut ;
# maxconn : nombre de connexion maximum acceptée sur le frontal, (protection anti DDOS)
# timeout : différents timeout permettant de couper les connexions trop longues
# errorfile : Définition des pages d'erreur génériques (exemple avec une erreur 404)

        log global
        mode http
        option httplog
        option dontlognull
        retries 3
        option redispatch
        maxconn 2000
        timeout connect 5s
        timeout client 30s
        timeout server 10s
        timeout http-request 5s
        errorfile 404 /etc/haproxy/errors/404.http

listen webstats
#haproxyd dispose d'une page de stats accessible. On choisit le port applicatif (ici 8080).
#On applique ensuite les differentes statistiques que l'on veut voir
        bind 172.16.12.1:8080
        stats enable
        stats hide-version
        stats scope webfarm
        stats scope webservers
        stats uri /
        stats realm Haproxy\ Statistics
        stats auth haproxy:secret
        stats refresh 10s

#Fonction d'écoute sur le port 80 du serveur relais
listen webfarm 
        #On écoute sur le port 80
        bind 172.16.12.1:80
        #Et on fait référence en backend : la partie webserver paramétré sur notre serveur web.
        default_backend webservers

#Définition du serveur backend : application du reverse proxy sur notre serveur web.
backend webservers
        mode http
        balance roundrobin
        #les requêtes sont réparties les unes après les autres sur 
        #chaque serveur de façon uniforme.

        cookie LBN insert indirect nocache
        #nom du cookie
        #Le proxy va positionner un cookie ici nommé LBN avec pour contenu le nom du serveur 
        #backend ;
        option httpclose
        option forwardfor
        #On renseigne ici les paramètres de notre serveur web en backend.
        server web01 172.16.13.1:80 weight 55 cookie web01 check inter 1s
